Quick y Shell sort

Ambos son algoritmos basados en la tecnica de divide y venceras, aunque principalmente el quick sort, este consiste en 
la division de la tabla segun un pivote, dato, escogido y dependiendo de la funcion que tengamos colocara datos tanto a la izquerda como a la derecha,
y este proceso se repite hastq ue la tabla completa que quede completamente "ordenada". El shell sort es un proceso algoritmico el cual es basa en
saltos, esots con el fin de poder compararlos con otros elemntos del alista y moverlos a su posicion correcta, y asu vez tambie se repite el proceso 
de saltos hasta que la lista quede ordenada

Investigacion 
| Caracter칤stica       | **Quick Sort**             | **Shell Sort**                   |
| -------------------- | -------------------------- | -------------------------------- |
| Tipo de algoritmo    | Divide y vencer치s          | Inserci칩n mejorada               |
| Estabilidad          | No estable                 | No estable                       |
| Complejidad promedio | O(n log n)                 | O(n^(3/2)) aprox                 |
| Memoria adicional    | Muy poca (in-place)        | Muy poca (in-place)              |
| Ideal para           | Grandes vol칰menes de datos | Listas medianas o casi ordenadas |
| Recursivo            | S칤                         | No necesariamente                |

El Quick Sort se usa much칤simo en la pr치ctica, especialmente en lenguajes de programaci칩n y librer칤as modernas (como C, Java, Python, etc.), porque combina eficiencia y flexibilidad.
游댲 En grandes vol칰menes de datos:
Quick Sort se adapta bien porque:
Es r치pido en promedio (O(n log n)),
Puede trabajar directamente sobre los datos en memoria sin necesitar estructuras extra (ordenamiento in-place),
Y se puede modificar f치cilmente para funcionar de forma m치s estable o paralela.
游댲 En sistemas grandes o gestores de datos:

En bases de datos o sistemas de procesamiento, el Quick Sort se suele usar para:
Ordenar resultados de consultas, por ejemplo al usar ORDER BY en SQL.
Preparar datos para 칤ndices, que ayudan a buscar informaci칩n m치s r치pido.
Procesos de an치lisis donde se necesita ordenar antes de agrupar o combinar datos.
Sin embargo, en sistemas con datos muy grandes que no caben en memoria RAM, se usa una versi칩n especial llamada "External Quick Sort", que divide los datos en partes, los ordena por separado y 
luego los combina (un proceso parecido al merge sort externo).
En la pr치ctica, muchos motores de bases de datos usan una combinaci칩n de Quick Sort y Merge Sort, dependiendo del tama침o y la ubicaci칩n de los datos (en memoria o en disco).


El Shell Sort tambi칠n es un algoritmo r치pido, pero no tan eficiente como Quick Sort cuando los vol칰menes de datos son muy grandes.
Se utiliza m치s en situaciones donde:

Los datos son medianos o peque침os,
Oest치n casi ordenados,
O cuando se busca un algoritmo simple y sin mucha carga de memoria.
游댲 En grandes sistemas:
Shell Sort se puede usar internamente en algunos programas o dispositivos donde:
No se dispone de mucha memoria adicional,
O se necesita ordenar parcialmente listas que cambian constantemente (como en sistemas embebidos o componentes del sistema operativo).
Sin embargo, en gestores de bases de datos grandes, no es el m치s com칰n, porque su rendimiento no es tan bueno como el de otros m칠todos modernos (Quick Sort, Merge Sort o Heap Sort).

En grandes gestores de bases de datos (como MySQL, PostgreSQL, Oracle, etc.)

En los grandes gestores de bases de datos, el ordenamiento es una operaci칩n fundamental, pero no se usa un solo algoritmo fijo.
Se selecciona el m치s adecuado seg칰n la situaci칩n, por ejemplo:
| Situaci칩n                                              | Algoritmo m치s usado               |
| ------------------------------------------------------ | --------------------------------- |
| Datos peque침os en memoria                              | Quick Sort o Heap Sort            |
| Datos muy grandes (en disco)                           | Merge Sort externo                |
| Datos parcialmente ordenados                           | Insertion o Shell Sort            |
| Ordenamiento paralelo (en varios n칰cleos o servidores) | Quick Sort o Merge Sort paralelos |
